## default
server.port=9000

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://ec2-54-210-128-153.compute-1.amazonaws.com:5432/d9thoa5idnqkgu
##spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=todegigqiozdjq
##spring.datasource.username=postgres
spring.datasource.password=96ca62148e6ab3ea1f3797fd60a024d66bfd9f8119495f1c81becec751fd4eee
##spring.datasource.password=admin
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.data=classpath:/data.sql
spring.datasource.continue-on-error=true
#drop n create table again, good for testing, comment this in production

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./images



